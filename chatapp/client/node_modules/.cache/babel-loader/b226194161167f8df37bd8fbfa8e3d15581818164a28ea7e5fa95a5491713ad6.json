{"ast":null,"code":"var _jsxFileName = \"/home/tarek/chatapp/client/src/CreateAccounts.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport sendLogo from './send.png';\nimport './createAccounts.css';\nimport { BrowserRouter, Routes, Route, Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CreateAccounts() {\n  _s();\n  // listening on type\n  const [inputValues, setInputValue] = React.useState({\n    username: '',\n    password: ''\n  });\n  const handleChange = e => {\n    setInputValue(prev => ({\n      ...prev,\n      [e.target.id]: e.target.value\n    }));\n  };\n  console.log(inputValues);\n  // sending message to backend\n  function createAcc() {\n    fetch('/createAccount', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(inputValues)\n    }).then(response => response.json()).then(data => {\n      if (data.status === 'success') {\n        console.log('Account created');\n        window.location.href = '/';\n      }\n      console.log(data.message);\n    }).catch(error => console.error('Error sending message:', error));\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Create Account\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"inputFields\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Username\",\n        className: \"input\",\n        onChange: e => handleChange(e),\n        id: \"username\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Password\",\n        className: \"input\",\n        onChange: e => handleChange(e),\n        id: \"password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"createButton\",\n        onClick: createAcc,\n        children: \"Create\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Already have an account? \", /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/login\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 45\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n}\n_s(CreateAccounts, \"r38ZZcsOFgzLiiBXjIJM4uJifyY=\");\n_c = CreateAccounts;\nvar _c;\n$RefreshReg$(_c, \"CreateAccounts\");","map":{"version":3,"names":["React","sendLogo","BrowserRouter","Routes","Route","Link","jsxDEV","_jsxDEV","CreateAccounts","_s","inputValues","setInputValue","useState","username","password","handleChange","e","prev","target","id","value","console","log","createAcc","fetch","method","headers","body","JSON","stringify","then","response","json","data","status","window","location","href","message","catch","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","onClick","to","_c","$RefreshReg$"],"sources":["/home/tarek/chatapp/client/src/CreateAccounts.js"],"sourcesContent":["import React from 'react';\nimport sendLogo from './send.png';\nimport './createAccounts.css';\nimport { BrowserRouter, Routes, Route, Link } from 'react-router-dom';\n\nexport default function CreateAccounts() {\n    // listening on type\n    const [inputValues, setInputValue] = React.useState({\n        username: '',\n        password: ''\n    });\n    const handleChange = (e) => {\n        setInputValue(prev => ({\n            ...prev,\n            [e.target.id]: e.target.value\n        }));\n    }\n    console.log(inputValues);\n    // sending message to backend\n    function createAcc() {\n        fetch('/createAccount', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(inputValues)\n        })\n            .then(response => response.json())\n            .then(data => {\n                if (data.status === 'success') {\n                    console.log('Account created');\n                    window.location.href = '/';\n                }\n                console.log(data.message);\n\n            })\n            .catch(error => console.error('Error sending message:', error));\n    }\n    return (\n        <div className=\"container\">\n            <h1>Create Account</h1>\n            <div className='inputFields'>\n                <input type='text' placeholder='Username' className='input' onChange={(e) => handleChange(e)} id='username' />\n                <input type='text' placeholder='Password' className='input' onChange={(e) => handleChange(e)} id='password' />\n                <button className='createButton' onClick={createAcc}>Create</button>\n                <p>Already have an account? <Link to='/login'>Login</Link></p>\n            </div>\n        </div>\n    )\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}