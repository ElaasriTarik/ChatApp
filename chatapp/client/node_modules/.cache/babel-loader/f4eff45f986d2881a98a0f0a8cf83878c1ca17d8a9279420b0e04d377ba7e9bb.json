{"ast":null,"code":"var _jsxFileName = \"/home/tarek/chatapp/client/src/Home.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport sendLogo from './send.png';\nimport './index.css';\nimport Users from './Users';\nimport { BrowserRouter, Routes, Route } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Home(props) {\n  _s();\n  // listening on type\n  const [inputValue, setInputValue] = React.useState('');\n  const handleChange = e => {\n    setInputValue(e.target.value);\n  };\n  // sending message to backend\n  const sendMessage = () => {\n    fetch('/sendMessage', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        message: inputValue,\n        receiver: localStorage.getItem('receiver'),\n        sender: localStorage.getItem('currUser')\n      })\n    }).then(response => response.json()).then(data => {\n      if (data.success === true) {\n        console.log('Message sent');\n      } else {\n        console.log('Message not sent');\n      }\n    }).catch(error => console.error('Error sending message:', error));\n  };\n\n  // get all users\n  const [usersData, setUsersData] = React.useState([]);\n  React.useEffect(() => {\n    const getUsers = () => {\n      fetch('/getUsers').then(response => response.json()).then(data => {\n        setUsersData(data);\n      }).catch(error => console.error('Error fetching users:', error));\n    };\n    getUsers();\n  }, []);\n\n  // get all messages between two people\n  const [messages, setMessages] = React.useState([]);\n  function getMessages() {\n    fetch('/getMessages', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        receiver: localStorage.getItem('receiver'),\n        sender: localStorage.getItem('currUser')\n      })\n    }).then(response => response.json()).then(data => {\n      // console.log(data);\n      setMessages(data);\n      createMessages(messages);\n    }).catch(error => console.error('Error fetching messages:', error));\n  }\n  const [messagesHTML, setMessagesHTML] = React.useState([]);\n  function createMessages(messages) {\n    // console.log(messages);\n    const messagesHTML = /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"messagesArea\",\n        children: messages.map(message => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message\",\n          \"data-sender\": message.author,\n          \"data-receiver\": message.receiver,\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: message.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 29\n          }, this)\n        }, message.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this)\n    }, void 0, false);\n    setMessagesHTML(messagesHTML);\n    console.log(messagesHTML);\n    // console.log(messagesHTML);\n    // document.querySelector('.messagesArea').innerHTML = messagesHTML;\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"usersSideBar\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-name\",\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Contacts\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this), usersData.map(user => /*#__PURE__*/_jsxDEV(Users, {\n        data: user,\n        getMessagesFunc: getMessages\n      }, user.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 40\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messagesArea\",\n      children: messagesHTML\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"typingBar\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Type something...\",\n        className: \"input\",\n        onChange: e => handleChange(e)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sendButton\",\n        onClick: sendMessage,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: sendLogo,\n          alt: \"send button\",\n          className: \"sendBtn\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 9\n  }, this);\n}\n_s(Home, \"r6EYqWocMg8P7FJXO8gdePBK+Qs=\");\n_c = Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","sendLogo","Users","BrowserRouter","Routes","Route","jsxDEV","_jsxDEV","Fragment","_Fragment","Home","props","_s","inputValue","setInputValue","useState","handleChange","e","target","value","sendMessage","fetch","method","headers","body","JSON","stringify","message","receiver","localStorage","getItem","sender","then","response","json","data","success","console","log","catch","error","usersData","setUsersData","useEffect","getUsers","messages","setMessages","getMessages","createMessages","messagesHTML","setMessagesHTML","children","className","map","author","content","fileName","_jsxFileName","lineNumber","columnNumber","id","user","getMessagesFunc","type","placeholder","onChange","onClick","src","alt","_c","$RefreshReg$"],"sources":["/home/tarek/chatapp/client/src/Home.js"],"sourcesContent":["import React from 'react';\nimport sendLogo from './send.png';\nimport './index.css';\nimport Users from './Users';\nimport { BrowserRouter, Routes, Route } from 'react-router-dom';\n\nexport default function Home(props) {\n    // listening on type\n    const [inputValue, setInputValue] = React.useState('');\n    const handleChange = (e) => {\n        setInputValue(e.target.value);\n    }\n    // sending message to backend\n    const sendMessage = () => {\n        fetch('/sendMessage', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({ message: inputValue, receiver: localStorage.getItem('receiver'), sender: localStorage.getItem('currUser') })\n        })\n            .then(response => response.json())\n            .then(data => {\n                if (data.success === true) {\n                    console.log('Message sent');\n\n                } else {\n                    console.log('Message not sent');\n                }\n            })\n            .catch(error => console.error('Error sending message:', error));\n    }\n\n\n    // get all users\n    const [usersData, setUsersData] = React.useState([]);\n\n    React.useEffect(() => {\n        const getUsers = () => {\n            fetch('/getUsers')\n                .then(response => response.json())\n                .then(data => {\n                    setUsersData(data);\n                })\n                .catch(error => console.error('Error fetching users:', error));\n        };\n        getUsers();\n    }, []);\n\n    // get all messages between two people\n    const [messages, setMessages] = React.useState([]);\n    function getMessages() {\n        fetch('/getMessages', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({ receiver: localStorage.getItem('receiver'), sender: localStorage.getItem('currUser') })\n        })\n            .then(response => response.json())\n            .then(data => {\n                // console.log(data);\n                setMessages(data);\n                createMessages(messages);\n            })\n            .catch(error => console.error('Error fetching messages:', error));\n\n    }\n    const [messagesHTML, setMessagesHTML] = React.useState([]);\n    function createMessages(messages) {\n        // console.log(messages);\n        const messagesHTML = (\n            <>\n                <div className='messagesArea'>\n                    {messages.map(message => (\n                        <div key={message.id} className='message' data-sender={message.author} data-receiver={message.receiver}>\n                            <p>{message.content}</p>\n                        </div>\n                    ))}\n                </div>\n            </>\n        );\n        setMessagesHTML(messagesHTML);\n        console.log(messagesHTML);\n        // console.log(messagesHTML);\n        // document.querySelector('.messagesArea').innerHTML = messagesHTML;\n    }\n    return (\n        <div className=\"container\">\n            <div className='usersSideBar'>\n                <div className='header-name'>\n                    <h2>Contacts</h2>\n                </div>\n                {usersData.map(user => <Users key={user.id} data={user} getMessagesFunc={getMessages} />)}\n            </div>\n            <div className='header'>\n            </div>\n            <div className='messagesArea'>\n                {messagesHTML}\n            </div>\n            <div className='typingBar'>\n                <input type='text' placeholder='Type something...' className='input' onChange={(e) => handleChange(e)} />\n                <div className='sendButton' onClick={sendMessage}>\n                    <img src={sendLogo} alt='send button' className='sendBtn' />\n                </div>\n            </div>\n        </div>\n    )\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}