{"ast":null,"code":"var _jsxFileName = \"/home/tarek/chatapp/client/src/Users.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport './Users.css';\nimport Home from './Home';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Users({\n  data\n}) {\n  _s();\n  const receiverSave = e => {\n    localStorage.setItem('receiver', e.target.id);\n  };\n  // fetch messages when clicked on a user\n  const [messages, setMessages] = React.useState([]);\n  function getMessages() {\n    fetch('/getMessages', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        receiver: data.username,\n        sender: localStorage.getItem('currUser')\n      })\n    }).then(response => response.json()).then(data => {\n      // console.log(data);\n      setMessages(data);\n      /*#__PURE__*/_jsxDEV(Home, {\n        messages: messages\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this);\n    }).catch(error => console.error('Error fetching messages:', error));\n  }\n  function handleClick(e) {\n    receiverSave(e);\n    getMessages();\n    // <Home messages={messages} />\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"user\",\n      id: data.username,\n      onClick: e => handleClick(e),\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: data.username\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 21\n      }, this)\n    }, data.key, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }, this)\n  }, void 0, false);\n}\n_s(Users, \"dxxfFX7fiXmC0h9Fk+B7I5VonqM=\");\n_c = Users;\nvar _c;\n$RefreshReg$(_c, \"Users\");","map":{"version":3,"names":["React","Home","jsxDEV","_jsxDEV","Fragment","_Fragment","Users","data","_s","receiverSave","e","localStorage","setItem","target","id","messages","setMessages","useState","getMessages","fetch","method","headers","body","JSON","stringify","receiver","username","sender","getItem","then","response","json","fileName","_jsxFileName","lineNumber","columnNumber","catch","error","console","handleClick","children","className","onClick","key","_c","$RefreshReg$"],"sources":["/home/tarek/chatapp/client/src/Users.js"],"sourcesContent":["import React from 'react';\nimport './Users.css'\nimport Home from './Home';\n\n\nexport default function Users({ data }) {\n    const receiverSave = (e) => {\n        localStorage.setItem('receiver', e.target.id);\n    }\n    // fetch messages when clicked on a user\n    const [messages, setMessages] = React.useState([]);\n    function getMessages() {\n        fetch('/getMessages', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({ receiver: data.username, sender: localStorage.getItem('currUser') })\n        })\n            .then(response => response.json())\n            .then(data => {\n                // console.log(data);\n                setMessages(data);\n                <Home messages={messages} />\n            })\n            .catch(error => console.error('Error fetching messages:', error));\n\n    }\n\n    function handleClick(e) {\n        receiverSave(e);\n        getMessages();\n        // <Home messages={messages} />\n    }\n    return (\n        <>\n            {/* <Home messages={messages} /> */}\n            {\n\n                <div key={data.key} className='user' id={data.username} onClick={(e) => handleClick(e)} >\n                    <p>{data.username}</p>\n                </div>\n            }\n        </>\n    )\n}"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,aAAa;AACpB,OAAOC,IAAI,MAAM,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAG1B,eAAe,SAASC,KAAKA,CAAC;EAAEC;AAAK,CAAC,EAAE;EAAAC,EAAA;EACpC,MAAMC,YAAY,GAAIC,CAAC,IAAK;IACxBC,YAAY,CAACC,OAAO,CAAC,UAAU,EAAEF,CAAC,CAACG,MAAM,CAACC,EAAE,CAAC;EACjD,CAAC;EACD;EACA,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGhB,KAAK,CAACiB,QAAQ,CAAC,EAAE,CAAC;EAClD,SAASC,WAAWA,CAAA,EAAG;IACnBC,KAAK,CAAC,cAAc,EAAE;MAClBC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACL,cAAc,EAAE;MACpB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEC,QAAQ,EAAElB,IAAI,CAACmB,QAAQ;QAAEC,MAAM,EAAEhB,YAAY,CAACiB,OAAO,CAAC,UAAU;MAAE,CAAC;IAC9F,CAAC,CAAC,CACGC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACtB,IAAI,IAAI;MACV;MACAS,WAAW,CAACT,IAAI,CAAC;MACjB,aAAAJ,OAAA,CAACF,IAAI;QAACc,QAAQ,EAAEA;MAAS;QAAAiB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAChC,CAAC,CAAC,CACDC,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC,CAAC;EAEzE;EAEA,SAASE,WAAWA,CAAC7B,CAAC,EAAE;IACpBD,YAAY,CAACC,CAAC,CAAC;IACfQ,WAAW,CAAC,CAAC;IACb;EACJ;EACA,oBACIf,OAAA,CAAAE,SAAA;IAAAmC,QAAA,eAIQrC,OAAA;MAAoBsC,SAAS,EAAC,MAAM;MAAC3B,EAAE,EAAEP,IAAI,CAACmB,QAAS;MAACgB,OAAO,EAAGhC,CAAC,IAAK6B,WAAW,CAAC7B,CAAC,CAAE;MAAA8B,QAAA,eACnFrC,OAAA;QAAAqC,QAAA,EAAIjC,IAAI,CAACmB;MAAQ;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC,GADhB5B,IAAI,CAACoC,GAAG;MAAAX,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEb;EAAC,gBAEZ,CAAC;AAEX;AAAC3B,EAAA,CAxCuBF,KAAK;AAAAsC,EAAA,GAALtC,KAAK;AAAA,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}